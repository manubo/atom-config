# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

'atom-text-editor[data-grammar="text html erb"]:not([mini])':
  'tab': 'emmet:expand-abbreviation-with-tab'

'atom-text-editor[data-grammar~="jsx"]:not([mini])':
  'tab': 'emmet:expand-abbreviation-with-tab'

'atom-text-editor':
  'alt-g': 'native!'

'.platform-darwin atom-workspace':
  'alt-cmd-n': 'advanced-open-file:toggle'
  'alt-cmd-o': 'unset!'

'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  ': :': 'go-to-line:toggle'
  'shift-cmd-T': 'terminal-plus:new'

'.platform-darwin':
  'cmd-shift-v': 'tree-view:reveal-active-file'

'body':
  'cmd-k cmd-j': 'window:focus-pane-below'
  'cmd-k cmd-h': 'window:focus-pane-on-left'
  'cmd-k cmd-l': 'window:focus-pane-on-right'
  'cmd-k cmd-k': 'window:focus-pane-above'

'atom-workspace atom-text-editor:not([mini])':
  'cmd-/': 'editor:toggle-line-comments'

'.tree-view':
  'shift-cmd-C': 'tree-view:copy-project-path'
